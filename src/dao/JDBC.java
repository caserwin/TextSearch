package dao;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 * @author hduxyd
 */
public class JDBC {

    private static final String DRIVERCLASS = "org.apache.derby.jdbc.EmbeddedDriver";
    private static final String URL = "jdbc:derby:db_myWBFL";
    private static final ThreadLocal<Connection> threadLocal = new ThreadLocal<>();
    /**
     * 数据库连接
     */
    private static Connection conn = null;

    public JDBC() {
        try {
            // 加载数据库驱动
            Class.forName(DRIVERCLASS).newInstance();
            // 创建数据库文件对象
            File dbExpressLetterFile = new File("db_myWBFL");
            // 判断数据库文件是否存在
            if (!dbExpressLetterFile.exists()) {
                // 定义创建数据库的SQL语句
                String sql = "create table TB (id int generated by default as identity,filepath varchar(200) not null,word varchar(100) not null,times int not null,TF double not null,TF_IDF double not null,pinyin varchar(100) not null,primary key (id))";
                // 创建数据库连接
                conn = DriverManager.getConnection(URL + ";create=true");
                // 保存数据库连接
                threadLocal.set(conn);
                // 创建数据库连接状态对象
                Statement stmt = conn.createStatement();
                stmt.execute(sql);
                // 关闭数据库连接状态对象
                stmt.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static Connection getConnection() { // 创建数据库连接的方法
        // 从线程中获得数据库连接
        conn = threadLocal.get();
        if (conn == null) {
            try {
                conn = DriverManager.getConnection(URL);
                threadLocal.set(conn);
            } catch (Exception e) {
                String[] infos = {"未能成功连接数据库！", "请确认本软件是否已经运行！"};
                JOptionPane.showMessageDialog(null, infos);
                System.exit(0);
                e.printStackTrace();
            }
        }
        return conn;
    }

    public static boolean closeConnection() {
        // 默认关闭成功
        boolean isClosed = true;
        // 从线程中获得数据库连接
        conn = threadLocal.get();
        // 清空线程中的数据库连接
        threadLocal.set(null);
        // 数据库连接可用
        if (conn != null) {
            try {
                // 关闭数据库连接
                conn.close();
            } catch (SQLException e) {
                // 关闭失败
                isClosed = false;
                e.printStackTrace();
            }
        }
        return isClosed;
    }
}
