package dao;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

public class JDBC {

    private static final String DRIVERCLASS = "org.apache.derby.jdbc.EmbeddedDriver";
    private static final String URL = "jdbc:derby:db_myWBFL";
    private static final ThreadLocal<Connection> threadLocal = new ThreadLocal<Connection>();
    private static Connection conn = null;// 数据库连接

    public JDBC() {
        try {
            Class.forName(DRIVERCLASS).newInstance(); // 加载数据库驱动
            File dbExpressLetterFile = new File("db_myWBFL");// 创建数据库文件对象
            if (!dbExpressLetterFile.exists()) {// 判断数据库文件是否存在
                // 定义创建数据库的SQL语句
                String sql = "create table TB (id int generated by default as identity,filepath varchar(200) not null,word varchar(100) not null,times int not null,TF double not null,TF_IDF double not null,pinyin varchar(100) not null,primary key (id))";
                conn = DriverManager.getConnection(URL + ";create=true");// 创建数据库连接
                threadLocal.set(conn);// 保存数据库连接
                Statement stmt = conn.createStatement();// 创建数据库连接状态对象
                stmt.execute(sql);
                stmt.close();// 关闭数据库连接状态对象
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static Connection getConnection() { // 创建数据库连接的方法
        conn = (Connection) threadLocal.get(); // 从线程中获得数据库连接
        if (conn == null) { // 没有可用的数据库连接
            try {
                conn = DriverManager.getConnection(URL);// 创建新的数据库连接
                threadLocal.set(conn); // 将数据库连接保存到线程中
            } catch (Exception e) {
                String[] infos = { "未能成功连接数据库！", "请确认本软件是否已经运行！" };
                JOptionPane.showMessageDialog(null, infos);// 弹出连接数据库失败的提示
                System.exit(0);// 关闭系统
                e.printStackTrace();
            }
        }
        return conn;
    }

    public static boolean closeConnection() { // 关闭数据库连接的方法
        boolean isClosed = true; // 默认关闭成功
        conn = (Connection) threadLocal.get(); // 从线程中获得数据库连接
        threadLocal.set(null); // 清空线程中的数据库连接
        if (conn != null) { // 数据库连接可用
            try {
                conn.close(); // 关闭数据库连接
            } catch (SQLException e) {
                isClosed = false; // 关闭失败
                e.printStackTrace();
            }
        }
        return isClosed;
    }
}
